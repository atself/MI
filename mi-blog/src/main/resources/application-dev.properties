spring.application.name=MI-BLOG

server.port=9922
server.ip=127.0.0.1

# session超时时间
server.session.timeout=3000

spring.thymeleaf.mode=HTML5
spring.thymeleaf.cache=false

spring.http.converters.preferred-json-mapper=gson
spring.http.encoding.charset=UTF-8

spring.datasource.tomcat.default-auto-commit=false

# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mi?characterEncoding=utf8&useSSL=true&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=3600000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=18000000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

# 从库数量
datasource.readSize=1

# 从数据源 -- 1
#spring.slave.type=com.alibaba.druid.pool.DruidDataSource
#spring.slave.driver-class-name=com.mysql.jdbc.Driver
#spring.slave.url=jdbc:mysql://127.0.0.1:3308/mi?characterEncoding=utf8&useSSL=true&autoReconnect=true
#spring.slave.username=root
#spring.slave.password=root
#spring.slave.initialSize=5
#spring.slave.minIdle=5
#spring.slave.maxActive=20
## 配置获取连接等待超时的时间
#spring.slave.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.slave.timeBetweenEvictionRunsMillis=3600000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.slave.minEvictableIdleTimeMillis=18000000
#spring.slave.validationQuery=SELECT 1 FROM DUAL
#spring.slave.testWhileIdle=true
#spring.slave.testOnBorrow=true
#spring.slave.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.slave.poolPreparedStatements=true
#spring.slave.maxPoolPreparedStatementPerConnectionSize=20



# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.slave.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.slave.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.slave.useGlobalDataSourceStat=true



# mybatis_config
# mapper.xml扫描路径
mybatis.mapper-locations=classpath*:com/mi/module/*/mapper/impl/*.xml
# model实体路径
mybatis.type-aliases-package=com.mi.module.*.entity


spring.aop.auto=true
spring.aop.proxy-target-class=true
# REDIS (Redis.Properties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
#spring.redis.hostName=10.70.8.243
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接超时时间（毫秒）
spring.redis.timeout=3000
##tomcat 请求设置
server.max-http-header-size=1048576
server.tomcat.max-connections=3000
server.tomcat.max-http-post-size=1048576
server.tomcat.max-threads=1000